---
#
- name: Gather only registered virtual machines
  vmware_vm_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    vm_type: vm
    validate_certs: 'no'
  delegate_to: localhost
  register: vm_info

#
- name: Set fact for virtual machine's name of dms-agent
  set_fact:
    dms_agent_vm_name: "{{ ( vm_info.virtual_machines | select('search', 'dms-agent') | list | string | split(' '))[1] | regex_replace('\"', '') | regex_replace(\"'\", '')  | regex_replace(',', '') }}"

#
- debug:
    msg: "{{ dms_agent_vm_name }}"

#
- name: Wait for the virtual machine to shutdown
  vmware_guest_powerstate:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    name: "{{ dms_agent_vm_name }}"
    state: shutdown-guest
    state_change_timeout: 200
  delegate_to: localhost
  register: vm_shutdown

#
- name: Set the state of a virtual machine to poweroff
  vmware_guest_powerstate:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    # folder: "/{{ datacenter_name }}/vm/my_folder"
    name: "{{ dms_agent_vm_name }}"
    state: powered-off
  delegate_to: localhost
  register: vm_poweroff

- meta: end_play

- name: Remove virtual machine - "{{ dms_agent_vm_name }}"
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    cluster: ""
    name: "{{ dms_agent_vm_name }}"
    state: absent
  delegate_to: localhost
  register: vm_removed
